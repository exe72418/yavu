version: '3.8' # Add or correct the version key here

services:
  # Servicio de Jenkins para integración continua
  jenkins:
    image: jenkins/jenkins:lts-jdk17
    container_name: jenkins
    ports:
      - "8081:8080" # Interfaz web de Jenkins
      - "50000:50000" # Comunicación con los agentes de construcción
    volumes:
      - jenkins_home:/var/jenkins_home
    networks:
      - servidores-net

  # Servicio de SonarQube para análisis de código estático
  sonarqube:
    image: sonarqube:lts-community
    container_name: sonarqube
    ports:
      - "9000:9000"
    environment:
      - SONAR_JDBC_URL=jdbc:postgresql://db:5432/sonar
      - SONAR_JDBC_USERNAME=sonar
      - SONAR_JDBC_PASSWORD=sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    depends_on:
      - db
    networks:
      - servidores-net

  # Base de datos para SonarQube
  db:
    image: postgres:13
    container_name: postgres_db
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
      - POSTGRES_DB=sonar
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - servidores-net

  # Servicio de Cypress para pruebas End-to-End
  cypress:
    image: cypress/included:13.13.1
    container_name: cypress
    volumes:
      - ./cypress:/e2e # Mapea la carpeta local 'cypress' al contenedor
    working_dir: /e2e
    entrypoint: tail -f /dev/null
    networks:
      - servidores-net

  # === Servicios para Backstage ===
    # Servicio para el backend de Backstage
  backstage-backend:
    build:
      context: /usr2/home/exequiel/Servidores/yavu/yavu/ # Este es el directorio raíz del proyecto Backstage
      dockerfile: ./packages/backend/Dockerfile # Esta es la ruta al Dockerfile desde el contexto
    image: backstage-backend:latest
    container_name: backstage_backend
    environment:
      - APP_CONFIG_app_config_production_yaml_backend_database_client=pg
      - APP_CONFIG_app_config_production_yaml_backend_database_connection_host=backstage_db
      - APP_CONFIG_app_config_production_yaml_backend_database_connection_user=backstage
      - APP_CONFIG_app_config_production_yaml_backend_database_connection_password=backstage
      - APP_CONFIG_app_config_production_yaml_backend_database_connection_database=backstage
      - APP_CONFIG_app_config_production_yaml_backend_auth_keys_0_secret=my-development-secret-key-12345
    ports:
      - "7007:7007"
    depends_on:
      - backstage_db
    networks:
      - servidores-net
      
      # Servicio para el frontend de Backstage
  backstage-frontend:
    image: nginx:1.25.3-alpine
    container_name: backstage_frontend
    ports:
      - "7008:80"
    volumes:
      # Asume que 'dist' está en el directorio 'packages/app' dentro de tu proyecto Backstage
      - /usr2/home/exequiel/Servidores/yavu/yavu/packages/app/dist:/usr/share/nginx/html:ro
    networks:
      - servidores-net
  # Base de datos para la aplicación Backstage
  backstage_db:
    image: postgres:13
    container_name: backstage_db
    environment:
      - POSTGRES_USER=backstage
      - POSTGRES_PASSWORD=backstage
      - POSTGRES_DB=backstage
    volumes:
      - backstage_postgres_data:/var/lib/postgresql/data
    networks:
      - servidores-net

# Definición de los volúmenes para persistir datos
volumes:
  jenkins_home:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgres_data:
  backstage_postgres_data: {}

# Definición de la red para que los contenedores se comuniquen
networks:
  servidores-net:
    driver: bridge
